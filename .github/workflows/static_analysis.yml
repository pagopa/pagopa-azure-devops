name: Static Analysis

on:
  push:
    branches-ignore:
      - main

inputs:
  precommit_version:
    required: false
    description: Version of pre-commit-terraform release
    default: 'v1.83.5@sha256:fed35dd9347aa3dd3e59a870dbc4500245dae26910d84065a6f66fe61afceaa8'

jobs:
  static_analysis:
    runs-on: ubuntu-latest

    steps:
      - name: ‚ö° Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: üèÅ Init terraform folders
        id: init_terraform_folders
        shell: bash
        run: |
          echo -e "\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-"
          echo    "+ üèÅ INIT TERRAFORM FOLDERS üèÅ +"
          echo -e "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n"

          FOLDERS=$(grep -rl --include='*.tf' --exclude-dir='.terraform' '^' . | xargs -I{} dirname {} | sort -u)
          echo "FOLDERS=${FOLDERS}"

          pids=()

          TAG=$(cat .terraform-version)
          docker pull hashicorp/terraform:$TAG

          for f in $FOLDERS; do
            pushd "$(pwd)/${f}"
              sed -i -e 's/  backend "azurerm" {}//g' 99_main.tf # use local backend
              docker run -v $(pwd):/tmp -w /tmp hashicorp/terraform:$TAG init &
              pids+=($!)
            popd

          done

          # Wait for each specific process to terminate.
          # Instead of this loop, a single call to 'wait' would wait for all the jobs
          # to terminate, but it would not give us their exit status.
          #
          for pid in "${pids[@]}"; do
            #
            # Waiting on a specific PID makes the wait command return with the exit
            # status of that process. Because of the 'set -e' setting, any exit status
            # other than zero causes the current shell to terminate with that exit
            # status as well.
            #
            wait "$pid"
          done

      - name: Show precommit version
        shell: bash
        run: |
          echo -e "\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"
          echo    "+ 1Ô∏è‚É£  SHOW PRECOMMIT VERSION 1Ô∏è‚É£  +"
          echo -e "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"

          TAG=${{ inputs.precommit_version }}
          docker run --rm --entrypoint cat ghcr.io/antonbabenko/pre-commit-terraform:$TAG /usr/bin/tools_versions_info

      - name: üö® Run precommit
        id: run_precommit
        shell: bash
        run: |
          echo -e "\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+"
          echo    "+- üö® PRECOMMIT TERRAFORM üö® -+"
          echo -e "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"

          TAG=${{ inputs.precommit_version }}
          docker run -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:$TAG run -a
